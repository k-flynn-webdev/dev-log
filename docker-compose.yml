version: '3'

services:
  database:
    image: postgres:12-alpine
    environment:
        - DB_POSTGRES=true
        - PGPORT=5432
        - POSTGRES_USER=${DB_USER}
        - POSTGRES_PASSWORD=${DB_PASSWORD}
        - POSTGRES_DB=${DB_NAME}
    ports:
      - "${DB_PORT}:5432"
    networks:
      - shared-network
    volumes:
      - database-volume:/var/lib/postgresql/data
    restart: on-failure

  api:
    build: ./api
    ports:
      - '${API_PORT}:3002'
    environment:
      - NODE_CONFIG={"host":"${HOST}", "port":3002, "authentication":{ "jwtOptions":{ "audience":"${APP_URL}" }, "oauth":{ "redirect":"http://${HOST}:${NGINX_PORT}/login?", "github":{"redirect_uri":"http://${HOST}:${NGINX_PORT}/api/oauth/github/callback","key":"${GITHUB_KEY}","secret":"${GITHUB_SECRET}"}, "google":{"redirect_uri":"http://${HOST}:${NGINX_PORT}/api/oauth/google/callback","key":"${GOOGLE_KEY}","secret":"${GOOGLE_SECRET}"}}},"postgresql":{"client":"pg","connection":"postgres://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}"}}
    volumes:
      - ./api:/api
      - /api/node_modules
    networks:
      - shared-network
    depends_on:
      - database
    command: yarn run dev -L

  client:
    build: ./client
    ports:
      - '${APP_PORT}:3001'
    environment:
      - PORT=${APP_PORT}
      - WATCHPACK_POLLING=true
      - CHOKIDAR_USEPOLLING=true
    volumes:
      - ./client/src:/client/src
    networks:
      - shared-network

  nginx-proxy:
    build: ./nginx
    ports:
      - '${NGINX_PORT}:80'
    volumes:
      - "./nginx/nginx.conf:/etc/nginx/conf.d/default.conf"
    networks:
      - shared-network
    depends_on:
      - api
      - client

  admin:
    image: adminer
    restart: on-failure
    depends_on:
      - database
    ports:
      - '${ADMIN_PORT}:8080'
    networks:
      - shared-network
#   Link: http://0.0.0.0:8023/?pgsql=database%3A5432&username=dbuser&db=dbname&ns=public


volumes:
  api:
  client:
  database-volume:

networks:
  shared-network:
